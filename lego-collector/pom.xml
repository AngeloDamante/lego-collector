<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.angelodamante.app</groupId>
	<artifactId>lego-collector</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>lego-collector</name>
	<url>http://maven.apache.org</url>

	<properties>
		<!-- compiler version -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>

		<!-- plugins versions -->
		<surefire-report.version>2.22.2</surefire-report.version>
		<site.version>3.9.1</site.version>
		<jacoco.version>0.8.6</jacoco.version>
		<coveralls.version>4.3.0</coveralls.version>
		<pit.version>1.5.2</pit.version>
		<javax.version>2.3.1</javax.version>
		<sonar.version>3.8.0.2131</sonar.version>
		<maven.build.helper.version>3.0.0</maven.build.helper.version>
		<maven.failsafe.version>2.22.1</maven.failsafe.version>

		<!-- dependencies versions -->
		<junit.version>4.13</junit.version>
		<assertj.version>3.17.1</assertj.version>
		<mockito.version>4.0.0</mockito.version>
		<log4j.version>2.13.0</log4j.version>
		<mongo.java.server.version>1.11.1</mongo.java.server.version>
		<mongo.java.driver.version>3.12.7</mongo.java.driver.version>
		<logback.version>1.2.3</logback.version>
		<picocli.version>4.6.1</picocli.version>
		<testcontainers.version>1.15.1</testcontainers.version>

		<!-- sonar -->
		<sonar.coverage.exclusions>
			**/model/entities/*.*,
			**/app/*.*
		</sonar.coverage.exclusions>
		<sonar.junit.reportPaths>
			${project.build.directory}/surefire-reports,
			${project.build.directory}/failsafe-reports
		</sonar.junit.reportPaths>
		<sonar.issue.ignore.multicriteria>e1,e2,e3,e4</sonar.issue.ignore.multicriteria>

		<!-- "Local variable and method parameter names should comply with a
		naming convention" -->
		<sonar.issue.ignore.multicriteria.e1.ruleKey>
			java:S117
		</sonar.issue.ignore.multicriteria.e1.ruleKey>
		<sonar.issue.ignore.multicriteria.e1.resourceKey>
			**/LegoSwingView.java
		</sonar.issue.ignore.multicriteria.e1.resourceKey>
		<!-- Disable "Tests should include assertions": -->
		<sonar.issue.ignore.multicriteria.e2.ruleKey>
			java:S2699
		</sonar.issue.ignore.multicriteria.e2.ruleKey>
		<sonar.issue.ignore.multicriteria.e2.resourceKey>
			**/LegoSwingViewTest.java
		</sonar.issue.ignore.multicriteria.e2.resourceKey>
		<!-- Disable "Tests classes should comply with a naming convention": -->
		<sonar.issue.ignore.multicriteria.e3.ruleKey>
			java:S3577
		</sonar.issue.ignore.multicriteria.e3.ruleKey>
		<sonar.issue.ignore.multicriteria.e3.resourceKey>
			**/*E2E.java
		</sonar.issue.ignore.multicriteria.e3.resourceKey>
		<sonar.issue.ignore.multicriteria.e4.ruleKey>
			java:S110
		</sonar.issue.ignore.multicriteria.e4.ruleKey>
		<sonar.issue.ignore.multicriteria.e4.resourceKey>
			**/*.java
		</sonar.issue.ignore.multicriteria.e4.resourceKey>


		<sonar.junit.reportPaths>
			${project.build.directory}/surefire-reports,
			${project.build.directory}/failsafe-reports
		</sonar.junit.reportPaths>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-swing-junit</artifactId>
			<version>${assertj.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>de.bwaldvogel</groupId>
			<artifactId>mongo-java-server</artifactId>
			<version>${mongo.java.server.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>${mongo.java.driver.version}</version>
		</dependency>
		<dependency>
			<!-- required to see Mongo Java Driver logs -->
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>info.picocli</groupId>
			<artifactId>picocli</artifactId>
			<version>${picocli.version}</version>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>mongodb</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>${maven.build.helper.version}</version>
				<executions>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/it/java</source>
								<source>src/e2e/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven.failsafe.version}</version>
				<executions>
					<execution>
						<id>default-it</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
					<execution>
						<id>e2e-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<excludes>
								<exclude>**/*IT.java</exclude>
							</excludes>
							<includes>
								<include>**/*E2E.java</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
							<archive>
								<manifest>
									<mainClass>com.angelodamante.app.LegoApp</mainClass>
								</manifest>
							</archive>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>${surefire-report.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>${site.version}</version>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.version}</version>
					<executions>
						<execution>
							<goals>
								<!-- binds by default to the phase "initialize" -->
								<goal>prepare-agent</goal>
								<!-- binds by default to the phase "verify" -->
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<excludes>
							<exclude> **/model/entities/*.* </exclude>
							<exclude> **/app/*.* </exclude>
						</excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.eluder.coveralls</groupId>
					<artifactId>coveralls-maven-plugin</artifactId>
					<version>${coveralls.version}</version>
					<dependencies>
						<dependency>
							<groupId>javax.xml.bind</groupId>
							<artifactId>jaxb-api</artifactId>
							<version>${javax.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.pitest</groupId>
					<artifactId>pitest-maven</artifactId>
					<version>${pit.version}</version>
					<configuration>
						<excludedClasses>
							<param>com.angelodamante.app.*</param>
							<param>com.angelodamante.model.entities.*</param>
							<param>com.angelodamante.view.*</param>
						</excludedClasses>
						<targetTests>
							<param>com.angelodamante.controller.*</param>
							<param>com.angelodamante.model.repository.*</param>
						</targetTests>
						<mutators>
							<mutator>DEFAULTS</mutator>
						</mutators>
						<mutationThreshold>100</mutationThreshold>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${sonar.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>jacoco</id>
			<build>
				<plugins>
					<plugin>
						<!-- configured in pluginManagement -->
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Configuration of PIT plugin  -->
		<profile>
			<id>pit</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-maven</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>mutationCoverage</goal>
								</goals>
								<phase>verify</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>